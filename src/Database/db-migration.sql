-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.abstract_display_field
(
    id uuid NOT NULL,
    report_group_id uuid NOT NULL,
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    label character varying(255) COLLATE pg_catalog."default" NOT NULL,
    field_alias character varying(255) COLLATE pg_catalog."default",
    is_sortable character varying(10) COLLATE pg_catalog."default" NOT NULL,
    sort_order character varying(255) COLLATE pg_catalog."default",
    sort_field character varying(255) COLLATE pg_catalog."default",
    element_type character varying(255) COLLATE pg_catalog."default" NOT NULL,
    element_property text COLLATE pg_catalog."default" NOT NULL,
    width character varying(255) COLLATE pg_catalog."default" NOT NULL,
    is_exportable character varying(10) COLLATE pg_catalog."default",
    text_alignment_style character varying(20) COLLATE pg_catalog."default",
    is_value_list smallint NOT NULL,
    display_field_group_id uuid,
    default_value character varying(255) COLLATE pg_catalog."default",
    is_encrypted smallint NOT NULL,
    is_meta smallint NOT NULL DEFAULT '0'::smallint,
    CONSTRAINT abstract_display_field_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.attendance_record
(
    id uuid NOT NULL,
    employee_id uuid NOT NULL,
    punch_in_utc_time timestamp without time zone,
    punch_in_note character varying(255) COLLATE pg_catalog."default",
    punch_in_time_offset character varying(255) COLLATE pg_catalog."default",
    punch_in_user_time timestamp without time zone,
    punch_out_utc_time timestamp without time zone,
    punch_out_note character varying(255) COLLATE pg_catalog."default",
    punch_out_time_offset character varying(255) COLLATE pg_catalog."default",
    punch_out_user_time timestamp without time zone,
    state character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT attendance_record_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.available_group_field
(
    report_group_id uuid NOT NULL,
    group_field_id uuid NOT NULL,
    CONSTRAINT available_group_field_pkey PRIMARY KEY (report_group_id, group_field_id)
);

CREATE TABLE IF NOT EXISTS public.composite_display_field
(
    report_group_id uuid NOT NULL,
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    label character varying(255) COLLATE pg_catalog."default" NOT NULL,
    field_alias character varying(255) COLLATE pg_catalog."default",
    is_sortable character varying(10) COLLATE pg_catalog."default" NOT NULL,
    sort_order character varying(255) COLLATE pg_catalog."default",
    sort_field character varying(255) COLLATE pg_catalog."default",
    element_type character varying(255) COLLATE pg_catalog."default" NOT NULL,
    element_property text COLLATE pg_catalog."default" NOT NULL,
    width character varying(255) COLLATE pg_catalog."default" NOT NULL,
    is_exportable character varying(10) COLLATE pg_catalog."default",
    text_alignment_style character varying(20) COLLATE pg_catalog."default",
    is_value_list smallint NOT NULL,
    display_field_group_id uuid,
    default_value character varying(255) COLLATE pg_catalog."default",
    is_encrypted smallint NOT NULL,
    is_meta smallint NOT NULL DEFAULT '0'::smallint,
    composite_display_field_id uuid NOT NULL,
    CONSTRAINT composite_display_field_pkey PRIMARY KEY (composite_display_field_id)
);

CREATE TABLE IF NOT EXISTS public.customer
(
    customer_id uuid NOT NULL,
    is_deleted smallint DEFAULT '0'::smallint,
    name character varying(100) COLLATE pg_catalog."default",
    description character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT customer_pkey PRIMARY KEY (customer_id)
);

CREATE TABLE IF NOT EXISTS public.data_group
(
    id uuid NOT NULL,
    name character varying(255) COLLATE pg_catalog."default",
    description character varying(255) COLLATE pg_catalog."default",
    can_read smallint,
    can_create smallint,
    can_update smallint,
    can_delete smallint,
    CONSTRAINT data_group_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.display_field
(
    report_group_id uuid NOT NULL,
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    label character varying(255) COLLATE pg_catalog."default" NOT NULL,
    field_alias character varying(255) COLLATE pg_catalog."default",
    is_sortable character varying(10) COLLATE pg_catalog."default" NOT NULL,
    sort_order character varying(255) COLLATE pg_catalog."default",
    sort_field character varying(255) COLLATE pg_catalog."default",
    element_type character varying(255) COLLATE pg_catalog."default" NOT NULL,
    element_property text COLLATE pg_catalog."default" NOT NULL,
    width character varying(255) COLLATE pg_catalog."default" NOT NULL,
    is_exportable character varying(10) COLLATE pg_catalog."default",
    text_alignment_style character varying(20) COLLATE pg_catalog."default",
    is_value_list smallint NOT NULL,
    display_field_group_id uuid NOT NULL,
    default_value character varying(255) COLLATE pg_catalog."default",
    is_encrypted smallint NOT NULL,
    is_meta smallint NOT NULL DEFAULT '0'::smallint,
    display_field_id uuid NOT NULL,
    CONSTRAINT display_field_pkey PRIMARY KEY (display_field_id)
);

CREATE TABLE IF NOT EXISTS public.display_field_group
(
    id uuid NOT NULL,
    report_group_id uuid NOT NULL,
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    is_list smallint NOT NULL DEFAULT '0'::smallint,
    CONSTRAINT display_field_group_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.education
(
    id uuid NOT NULL,
    name character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT education_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.email_configuration
(
    id uuid NOT NULL,
    mail_type character varying(50) COLLATE pg_catalog."default",
    sent_as character varying(250) COLLATE pg_catalog."default" NOT NULL,
    sendmail_path character varying(250) COLLATE pg_catalog."default",
    smtp_host character varying(250) COLLATE pg_catalog."default",
    smtp_port uuid,
    smtp_username character varying(250) COLLATE pg_catalog."default",
    smtp_password character varying(250) COLLATE pg_catalog."default",
    smtp_auth_type character varying(50) COLLATE pg_catalog."default",
    smtp_security_type character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT email_configuration_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.email_notification
(
    id uuid NOT NULL,
    name character varying(100) COLLATE pg_catalog."default",
    is_enable uuid,
    CONSTRAINT email_notification_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.email_subscriber
(
    id uuid NOT NULL,
    notification_id uuid,
    name character varying(100) COLLATE pg_catalog."default",
    email character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT email_subscriber_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.emp_education
(
    id uuid NOT NULL,
    emp_number uuid,
    education_id uuid,
    institute character varying(100) COLLATE pg_catalog."default",
    major character varying(100) COLLATE pg_catalog."default",
    year numeric(4, 2),
    score character varying(25) COLLATE pg_catalog."default",
    start_date date,
    end_date date,
    CONSTRAINT emp_education_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.emp_license
(
    emp_number uuid NOT NULL,
    license_id uuid NOT NULL,
    license_no character varying(50) COLLATE pg_catalog."default",
    license_issued_date date,
    license_expiry_date date,
    CONSTRAINT emp_license_pkey PRIMARY KEY (emp_number, license_id)
);

CREATE TABLE IF NOT EXISTS public.emp_reporting_method
(
    reporting_method_id uuid NOT NULL,
    reporting_method_name character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT emp_reporting_method_pkey PRIMARY KEY (reporting_method_id)
);

CREATE TABLE IF NOT EXISTS public.emp_termination
(
    id uuid NOT NULL,
    emp_number uuid,
    reason_id uuid,
    termination_date date,
    note character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT emp_termination_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.emp_termination_reason
(
    id uuid NOT NULL,
    name character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT emp_termination_reason_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.employee_work_shift
(
    work_shift_id uuid NOT NULL,
    emp_number uuid NOT NULL,
    CONSTRAINT employee_work_shift_pkey PRIMARY KEY (work_shift_id, emp_number)
);

CREATE TABLE IF NOT EXISTS public.employment_status
(
    id uuid NOT NULL,
    name character varying(60) COLLATE pg_catalog."default",
    CONSTRAINT employment_status_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.filter_field
(
    filter_field_id uuid NOT NULL,
    report_group_id uuid NOT NULL,
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    where_clause_part text COLLATE pg_catalog."default" NOT NULL,
    filter_field_widget character varying(255) COLLATE pg_catalog."default",
    condition_no bigint NOT NULL,
    required boolean,
    CONSTRAINT filter_field_pkey PRIMARY KEY (filter_field_id)
);

CREATE TABLE IF NOT EXISTS public.group_field
(
    group_field_id uuid NOT NULL,
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    group_by_clause text COLLATE pg_catalog."default" NOT NULL,
    group_field_widget character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT group_field_pkey PRIMARY KEY (group_field_id)
);

CREATE TABLE IF NOT EXISTS public.holiday
(
    id uuid NOT NULL,
    recurring smallint DEFAULT '0'::smallint,
    description text COLLATE pg_catalog."default",
    holiday_date date,
    length integer,
    operational_country_id integer,
    CONSTRAINT holiday_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_attach_type
(
    id uuid NOT NULL,
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT hs_hr_attach_type_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_attachment
(
    id uuid NOT NULL,
    emp_number uuid NOT NULL,
    category_id uuid NOT NULL,
    group_id uuid NOT NULL,
    type_id uuid NOT NULL,
    file_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    file_size numeric(10, 2) NOT NULL,
    CONSTRAINT hs_hr_attachment_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_attachment_category
(
    id uuid NOT NULL,
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT hs_hr_attachment_category_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_attachment_group
(
    id uuid NOT NULL,
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT hs_hr_attachment_group_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_comp_property
(
    prop_id uuid NOT NULL,
    prop_name character varying(250) COLLATE pg_catalog."default" NOT NULL,
    emp_id uuid,
    CONSTRAINT hs_hr_comp_property_pkey PRIMARY KEY (prop_id)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_config
(
    key character varying(100) COLLATE pg_catalog."default" NOT NULL,
    value text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT hs_hr_config_pkey PRIMARY KEY (key)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_country
(
    cou_code character(2) COLLATE pg_catalog."default" NOT NULL,
    name character varying(80) COLLATE pg_catalog."default" NOT NULL DEFAULT ''::character varying,
    cou_name character varying(80) COLLATE pg_catalog."default" NOT NULL DEFAULT ''::character varying,
    iso3 character(3) COLLATE pg_catalog."default",
    numcode smallint,
    CONSTRAINT hs_hr_country_pkey PRIMARY KEY (cou_code)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_currency_type
(
    code integer NOT NULL DEFAULT 0,
    currency_id character(3) COLLATE pg_catalog."default" NOT NULL,
    currency_name character varying(70) COLLATE pg_catalog."default" NOT NULL DEFAULT ''::character varying,
    CONSTRAINT hs_hr_currency_type_pkey PRIMARY KEY (currency_id)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_education
(
    edu_code character varying(13) COLLATE pg_catalog."default" NOT NULL,
    edu_is_deleted smallint DEFAULT '0'::smallint,
    edu_name character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT hs_hr_education_pkey PRIMARY KEY (edu_code)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_emp_attachment
(
    attach_id uuid NOT NULL,
    emp_number uuid NOT NULL,
    attach_name character varying(100) COLLATE pg_catalog."default" NOT NULL DEFAULT ''::character varying,
    attach_description character varying(200) COLLATE pg_catalog."default",
    attach_filename character varying(100) COLLATE pg_catalog."default" NOT NULL DEFAULT ''::character varying,
    attach_filetype character varying(20) COLLATE pg_catalog."default" NOT NULL DEFAULT ''::character varying,
    size numeric(10, 2),
    attachment_type smallint DEFAULT '0'::smallint,
    attachment_group smallint DEFAULT '0'::smallint,
    CONSTRAINT hs_hr_emp_attachment_pkey PRIMARY KEY (attach_id)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_emp_basicsalary
(
    id uuid NOT NULL,
    emp_number uuid NOT NULL,
    sal_grd_code character varying(13) COLLATE pg_catalog."default",
    currency_id character varying(6) COLLATE pg_catalog."default" NOT NULL DEFAULT ''::character varying,
    ebsal_basic_salary character varying(100) COLLATE pg_catalog."default",
    payperiod_code character varying(13) COLLATE pg_catalog."default",
    salary_component character varying(100) COLLATE pg_catalog."default",
    comments character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT hs_hr_emp_basicsalary_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_emp_children
(
    emp_number uuid NOT NULL,
    ec_seqno numeric(2, 2) NOT NULL,
    ec_name character varying(100) COLLATE pg_catalog."default" DEFAULT NULL::character varying,
    ec_date_of_birth date,
    CONSTRAINT hs_hr_emp_children_pkey PRIMARY KEY (emp_number, ec_seqno)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_emp_contract_extend
(
    emp_number uuid NOT NULL,
    econ_extend_id numeric(10, 2) NOT NULL,
    econ_extend_start_date timestamp without time zone,
    econ_extend_end_date timestamp without time zone,
    CONSTRAINT hs_hr_emp_contract_extend_pkey PRIMARY KEY (emp_number, econ_extend_id)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_emp_dependents
(
    emp_number uuid NOT NULL,
    ed_seqno numeric(2, 0) NOT NULL,
    ed_name character varying(100) COLLATE pg_catalog."default" DEFAULT NULL::character varying,
    ed_relationship_type character varying(10) COLLATE pg_catalog."default",
    ed_relationship character varying(100) COLLATE pg_catalog."default" DEFAULT NULL::character varying,
    ed_date_of_birth date,
    CONSTRAINT hs_hr_emp_dependents_pkey PRIMARY KEY (emp_number, ed_seqno)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_emp_directdebit
(
    id uuid NOT NULL,
    salary_id uuid NOT NULL,
    dd_routing_num uuid NOT NULL,
    dd_account character varying(100) COLLATE pg_catalog."default" NOT NULL DEFAULT ''::character varying,
    dd_amount numeric(11, 2) NOT NULL,
    dd_account_type character varying(20) COLLATE pg_catalog."default" NOT NULL DEFAULT ''::character varying,
    dd_transaction_type character varying(20) COLLATE pg_catalog."default" NOT NULL DEFAULT ''::character varying,
    CONSTRAINT hs_hr_emp_directdebit_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_emp_education
(
    emp_number uuid NOT NULL,
    code character varying(13) COLLATE pg_catalog."default" NOT NULL,
    institute character varying(200) COLLATE pg_catalog."default",
    major character varying(100) COLLATE pg_catalog."default",
    year character varying(13) COLLATE pg_catalog."default",
    score character varying(50) COLLATE pg_catalog."default",
    start_date date,
    end_date date,
    CONSTRAINT hs_hr_emp_education_pkey PRIMARY KEY (emp_number, code)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_emp_emergency_contacts
(
    emp_number uuid NOT NULL,
    eec_seqno numeric(2, 2) NOT NULL,
    eec_name character varying(100) COLLATE pg_catalog."default" DEFAULT NULL::character varying,
    eec_relationship character varying(100) COLLATE pg_catalog."default" DEFAULT NULL::character varying,
    eec_home_no character varying(100) COLLATE pg_catalog."default" DEFAULT NULL::character varying,
    eec_mobile_no character varying(100) COLLATE pg_catalog."default" DEFAULT NULL::character varying,
    eec_office_no character varying(100) COLLATE pg_catalog."default" DEFAULT NULL::character varying,
    CONSTRAINT hs_hr_emp_emergency_contacts_pkey PRIMARY KEY (emp_number, eec_seqno)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_emp_jobtitle_history
(
    id uuid NOT NULL,
    emp_number uuid NOT NULL,
    code character varying(15) COLLATE pg_catalog."default" NOT NULL,
    name character varying(250) COLLATE pg_catalog."default",
    start_date timestamp without time zone,
    end_date timestamp without time zone,
    CONSTRAINT hs_hr_emp_jobtitle_history_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_emp_language
(
    emp_number uuid NOT NULL,
    code character varying(10) COLLATE pg_catalog."default" NOT NULL,
    fluency_code character(1) COLLATE pg_catalog."default",
    competency_code character(1) COLLATE pg_catalog."default",
    comments text COLLATE pg_catalog."default",
    CONSTRAINT hs_hr_emp_language_pkey PRIMARY KEY (emp_number, code)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_emp_location_history
(
    id uuid NOT NULL,
    emp_number uuid NOT NULL,
    code character varying(15) COLLATE pg_catalog."default" NOT NULL,
    name character varying(250) COLLATE pg_catalog."default",
    start_date timestamp without time zone,
    end_date timestamp without time zone,
    CONSTRAINT hs_hr_emp_location_history_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_emp_locations
(
    emp_number uuid NOT NULL,
    location_id uuid NOT NULL,
    CONSTRAINT hs_hr_emp_locations_pkey PRIMARY KEY (emp_number, location_id)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_emp_member_detail
(
    emp_number uuid NOT NULL,
    membship_code character varying(13) COLLATE pg_catalog."default" NOT NULL,
    mship_type_code character varying(13) COLLATE pg_catalog."default",
    ememb_subscript_amount numeric(10, 2),
    ememb_subscript_currency character varying(13) COLLATE pg_catalog."default",
    ememb_commence_date date,
    ememb_renewal_date date,
    CONSTRAINT hs_hr_emp_member_detail_pkey PRIMARY KEY (emp_number, membship_code)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_emp_passport
(
    emp_number uuid NOT NULL,
    ep_seqno numeric(2, 2) NOT NULL,
    ep_passport_type character varying(2) COLLATE pg_catalog."default" NOT NULL DEFAULT ''::character varying,
    ep_passport_num character varying(100) COLLATE pg_catalog."default" NOT NULL DEFAULT ''::character varying,
    ep_i9_status character varying(100) COLLATE pg_catalog."default" NOT NULL DEFAULT ''::character varying,
    ep_passportissue_date date,
    ep_passportexp_date date,
    ep_country character varying(13) COLLATE pg_catalog."default" NOT NULL DEFAULT ''::character varying,
    ep_i9_review_date date,
    ep_comments character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT hs_hr_emp_passport_pkey PRIMARY KEY (emp_number, ep_seqno)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_emp_picture
(
    emp_number uuid NOT NULL,
    epic_picture bytea,
    epic_filename character varying(100) COLLATE pg_catalog."default",
    epic_type character varying(50) COLLATE pg_catalog."default",
    epic_file_size character varying(20) COLLATE pg_catalog."default",
    epic_file_width character varying(20) COLLATE pg_catalog."default",
    epic_file_height character varying(20) COLLATE pg_catalog."default",
    CONSTRAINT hs_hr_emp_picture_pkey PRIMARY KEY (emp_number)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_emp_reporting
(
    erep_sup_emp_number uuid NOT NULL,
    erep_sub_emp_number uuid NOT NULL,
    erep_reporting_mode character varying(10) COLLATE pg_catalog."default",
    CONSTRAINT hs_hr_emp_reporting_pkey PRIMARY KEY (erep_sup_emp_number, erep_sub_emp_number)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_emp_skill
(
    emp_number uuid NOT NULL,
    code character varying(3) COLLATE pg_catalog."default" NOT NULL,
    years_of_exp integer,
    comments text COLLATE pg_catalog."default",
    CONSTRAINT hs_hr_emp_skill_pkey PRIMARY KEY (emp_number, code)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_emp_status
(
    estat_code character varying(4) COLLATE pg_catalog."default" NOT NULL,
    estat_name character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT hs_hr_emp_status_pkey PRIMARY KEY (estat_code)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_emp_subdivision_history
(
    id uuid NOT NULL,
    emp_number uuid NOT NULL,
    code character varying(15) COLLATE pg_catalog."default" NOT NULL,
    name character varying(250) COLLATE pg_catalog."default",
    start_date timestamp without time zone,
    end_date timestamp without time zone,
    CONSTRAINT hs_hr_emp_subdivision_history_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_emp_subscribe
(
    emp_number uuid NOT NULL,
    frequency integer NOT NULL,
    CONSTRAINT hs_hr_emp_subscribe_pkey PRIMARY KEY (emp_number, frequency)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_emp_us_tax
(
    emp_number uuid NOT NULL,
    tax_federal_status character varying(30) COLLATE pg_catalog."default" DEFAULT NULL::character varying,
    tax_federal_exceptions integer DEFAULT 0,
    tax_state character varying(30) COLLATE pg_catalog."default" DEFAULT NULL::character varying,
    tax_state_status character varying(30) COLLATE pg_catalog."default" DEFAULT NULL::character varying,
    tax_state_exceptions integer DEFAULT 0,
    tax_unemp_state character varying(30) COLLATE pg_catalog."default" DEFAULT NULL::character varying,
    tax_work_state character varying(30) COLLATE pg_catalog."default" DEFAULT NULL::character varying,
    CONSTRAINT hs_hr_emp_us_tax_pkey PRIMARY KEY (emp_number)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_emp_visa_history
(
    id uuid NOT NULL,
    emp_number uuid NOT NULL,
    evh_type character varying(10) COLLATE pg_catalog."default" NOT NULL DEFAULT ''::character varying,
    evh_number character varying(100) COLLATE pg_catalog."default" NOT NULL DEFAULT ''::character varying,
    evh_issue_date date,
    evh_expiry_date date,
    evh_country character varying(13) COLLATE pg_catalog."default" NOT NULL DEFAULT ''::character varying,
    CONSTRAINT hs_hr_emp_visa_history_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_emp_work_experience
(
    emp_number uuid NOT NULL,
    eexp_seqno numeric(10, 2) NOT NULL,
    eexp_employer character varying(100) COLLATE pg_catalog."default",
    eexp_jobtit character varying(120) COLLATE pg_catalog."default",
    eexp_from_date timestamp without time zone,
    eexp_to_date timestamp without time zone,
    eexp_comments character varying(200) COLLATE pg_catalog."default",
    eexp_internal integer,
    CONSTRAINT hs_hr_emp_work_experience_pkey PRIMARY KEY (emp_number, eexp_seqno)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_employee
(
    emp_number uuid NOT NULL,
    employee_id character varying(20) COLLATE pg_catalog."default",
    emp_lastname character varying(100) COLLATE pg_catalog."default",
    emp_firstname character varying(100) COLLATE pg_catalog."default",
    emp_middle_name character varying(100) COLLATE pg_catalog."default",
    emp_nick_name character varying(100) COLLATE pg_catalog."default",
    emp_smoker smallint DEFAULT '0'::smallint,
    ethnicity_id integer,
    emp_birthday date,
    emp_gender character(1) COLLATE pg_catalog."default",
    emp_marital_status character varying(20) COLLATE pg_catalog."default",
    emp_ssn_num character varying(100) COLLATE pg_catalog."default",
    emp_sin_num character varying(100) COLLATE pg_catalog."default",
    emp_other_id character varying(100) COLLATE pg_catalog."default",
    emp_dri_lice_num character varying(100) COLLATE pg_catalog."default",
    emp_dri_lice_exp_date date,
    emp_military_service character varying(100) COLLATE pg_catalog."default",
    emp_status character varying(100) COLLATE pg_catalog."default",
    job_title_code character varying(100) COLLATE pg_catalog."default",
    eeo_cat_code character varying(100) COLLATE pg_catalog."default",
    work_station character varying(100) COLLATE pg_catalog."default",
    emp_street1 character varying(100) COLLATE pg_catalog."default",
    emp_street2 character varying(100) COLLATE pg_catalog."default",
    city_code character varying(100) COLLATE pg_catalog."default",
    coun_code character varying(3) COLLATE pg_catalog."default",
    emp_zipcode character varying(20) COLLATE pg_catalog."default",
    emp_hm_telephone character varying(20) COLLATE pg_catalog."default",
    emp_mobile character varying(20) COLLATE pg_catalog."default",
    emp_work_telephone character varying(20) COLLATE pg_catalog."default",
    emp_work_email character varying(100) COLLATE pg_catalog."default",
    emp_oth_email character varying(100) COLLATE pg_catalog."default",
    joined_date date,
    emp_termination_date date,
    CONSTRAINT hs_hr_employee_pkey PRIMARY KEY (emp_number)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_employee_leave_entitlement
(
    emp_number uuid NOT NULL,
    leave_type_id character varying(13) COLLATE pg_catalog."default" NOT NULL,
    no_of_days numeric(6, 2) NOT NULL DEFAULT 0.00,
    days_used numeric(6, 2) NOT NULL DEFAULT 0.00,
    leave_entitlement_status smallint NOT NULL DEFAULT '0'::smallint,
    CONSTRAINT hs_hr_employee_leave_entitlement_pkey PRIMARY KEY (emp_number, leave_type_id)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_employee_leave_quota
(
    leave_type_id character varying(13) COLLATE pg_catalog."default" NOT NULL,
    employee_id uuid NOT NULL,
    leave_period_id uuid NOT NULL,
    no_of_days_allotted numeric(6, 2),
    leave_taken numeric(6, 2) DEFAULT 0.00,
    leave_brought_forward numeric(6, 2) DEFAULT 0.00,
    leave_carried_forward numeric(6, 2) DEFAULT 0.00,
    CONSTRAINT hs_hr_employee_leave_quota_pkey PRIMARY KEY (leave_type_id, employee_id, leave_period_id)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_employee_subscription
(
    emp_number uuid NOT NULL,
    notification_type character varying(50) COLLATE pg_catalog."default" NOT NULL DEFAULT '0'::character varying,
    subscription_id uuid,
    CONSTRAINT hs_hr_employee_subscription_pkey PRIMARY KEY (emp_number, notification_type)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_employee_training
(
    emp_number uuid NOT NULL,
    training_id uuid NOT NULL,
    training_subject character varying(100) COLLATE pg_catalog."default",
    training_topic character varying(100) COLLATE pg_catalog."default",
    training_location character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT hs_hr_employee_training_pkey PRIMARY KEY (emp_number, training_id)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_employee_wage_list
(
    emp_number uuid NOT NULL,
    wage character varying(250) COLLATE pg_catalog."default" NOT NULL DEFAULT '0'::character varying,
    CONSTRAINT hs_hr_employee_wage_list_pkey PRIMARY KEY (emp_number, wage)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_ethnic_race
(
    ethnic_race_code character varying(13) COLLATE pg_catalog."default" NOT NULL,
    eth_is_deleted smallint DEFAULT '0'::smallint,
    eth_name character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT hs_hr_ethnic_race_pkey PRIMARY KEY (ethnic_race_code)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_geninfo
(
    code character varying(13) COLLATE pg_catalog."default" NOT NULL,
    geninfo_keys character varying(200) COLLATE pg_catalog."default",
    geninfo_values text COLLATE pg_catalog."default",
    CONSTRAINT hs_hr_geninfo_pkey PRIMARY KEY (code)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_job_spec
(
    jobspec_id uuid NOT NULL,
    jobspec_name character varying(50) COLLATE pg_catalog."default",
    jobspec_desc text COLLATE pg_catalog."default",
    jobspec_duties text COLLATE pg_catalog."default",
    CONSTRAINT hs_hr_job_spec_pkey PRIMARY KEY (jobspec_id)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_kpi
(
    id uuid NOT NULL,
    job_title_code character varying(13) COLLATE pg_catalog."default",
    description character varying(200) COLLATE pg_catalog."default",
    rate_min numeric(18, 2),
    rate_max numeric(18, 2),
    rate_default smallint,
    is_active boolean,
    CONSTRAINT hs_hr_kpi_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_language
(
    lang_code character varying(2) COLLATE pg_catalog."default" NOT NULL,
    lang_name character varying(100) COLLATE pg_catalog."default" NOT NULL DEFAULT ''::character varying,
    CONSTRAINT hs_hr_language_pkey PRIMARY KEY (lang_code)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_leave
(
    leave_id uuid NOT NULL,
    leave_length_hours numeric(6, 2),
    leave_length_days numeric(4, 2),
    leave_request_id integer NOT NULL,
    leave_type_id character varying(13) COLLATE pg_catalog."default" NOT NULL,
    employee_id uuid NOT NULL,
    leave_date date,
    leave_status smallint,
    leave_comments character varying(250) COLLATE pg_catalog."default",
    start_time time without time zone,
    end_time time without time zone,
    CONSTRAINT hs_hr_leave_pkey PRIMARY KEY (leave_id, leave_request_id, leave_type_id, employee_id)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_leave_group
(
    leave_group_id uuid NOT NULL,
    name character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT hs_hr_leave_group_pkey PRIMARY KEY (leave_group_id)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_leave_group_employee
(
    leave_group_id uuid NOT NULL,
    emp_number uuid NOT NULL,
    CONSTRAINT hs_hr_leave_group_employee_pkey PRIMARY KEY (leave_group_id, emp_number)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_leave_group_leave_type
(
    leave_group_id uuid NOT NULL,
    leave_type_id character varying(13) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT hs_hr_leave_group_leave_type_pkey PRIMARY KEY (leave_group_id, leave_type_id)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_leave_period
(
    leave_period_id uuid NOT NULL,
    leave_period_start_date date,
    leave_period_end_date date,
    CONSTRAINT hs_hr_leave_period_pkey PRIMARY KEY (leave_period_id)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_leave_requests
(
    leave_request_id uuid NOT NULL,
    leave_period_id uuid,
    leave_type_id character varying(13) COLLATE pg_catalog."default" NOT NULL,
    leave_type_name character(50) COLLATE pg_catalog."default",
    date_applied date NOT NULL,
    employee_id uuid NOT NULL,
    leave_comments character varying(250) COLLATE pg_catalog."default",
    CONSTRAINT hs_hr_leave_requests_pkey PRIMARY KEY (leave_request_id, leave_type_id, employee_id)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_leavetype
(
    leave_type_id character varying(13) COLLATE pg_catalog."default" NOT NULL,
    leave_type_name character varying(50) COLLATE pg_catalog."default",
    available_flag smallint,
    operational_country_id uuid,
    CONSTRAINT hs_hr_leavetype_pkey PRIMARY KEY (leave_type_id)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_pay_period
(
    payperiod_id uuid NOT NULL,
    payperiod_name character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT hs_hr_pay_period_pkey PRIMARY KEY (payperiod_id)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_payperiod
(
    payperiod_code character varying(13) COLLATE pg_catalog."default" NOT NULL,
    payperiod_name character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT hs_hr_payperiod_pkey PRIMARY KEY (payperiod_code)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_performance_review
(
    id uuid NOT NULL,
    employee_id uuid,
    reviewer_id uuid,
    creator_id character varying(36) COLLATE pg_catalog."default",
    job_title_code character varying(10) COLLATE pg_catalog."default",
    sub_division_id uuid,
    creation_date date,
    period_from date,
    period_to date,
    due_date date,
    state smallint,
    kpis text COLLATE pg_catalog."default",
    CONSTRAINT hs_hr_performance_review_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_performance_review_comments
(
    id uuid NOT NULL,
    pr_id uuid,
    employee_id uuid,
    comment text COLLATE pg_catalog."default",
    create_date date,
    CONSTRAINT hs_hr_performance_review_comments_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_province
(
    id uuid NOT NULL,
    province_name character varying(40) COLLATE pg_catalog."default" NOT NULL DEFAULT ''::character varying,
    province_code character(2) COLLATE pg_catalog."default" NOT NULL DEFAULT ''::bpchar,
    cou_code character(2) COLLATE pg_catalog."default" NOT NULL DEFAULT 'us'::bpchar,
    CONSTRAINT hs_hr_province_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_state
(
    cou_code character(3) COLLATE pg_catalog."default" NOT NULL,
    state_code character(3) COLLATE pg_catalog."default" NOT NULL,
    state_name character varying(100) COLLATE pg_catalog."default" NOT NULL DEFAULT ''::character varying,
    CONSTRAINT hs_hr_state_pkey PRIMARY KEY (cou_code, state_code)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_termination_reason
(
    term_code character(3) COLLATE pg_catalog."default" NOT NULL,
    term_reason character varying(100) COLLATE pg_catalog."default" NOT NULL DEFAULT ''::character varying,
    CONSTRAINT hs_hr_termination_reason_pkey PRIMARY KEY (term_code)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_timesheet_period
(
    timesheet_period_id uuid NOT NULL,
    period_name character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT hs_hr_timesheet_period_pkey PRIMARY KEY (timesheet_period_id)
);

CREATE TABLE IF NOT EXISTS public.hs_hr_unique_id
(
    id uuid NOT NULL,
    last_id uuid NOT NULL,
    table_name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    field_name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT hs_hr_unique_id_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.job_candidate
(
    id uuid NOT NULL,
    first_name character varying(30) COLLATE pg_catalog."default",
    middle_name character varying(30) COLLATE pg_catalog."default",
    last_name character varying(30) COLLATE pg_catalog."default",
    email character varying(100) COLLATE pg_catalog."default",
    contact_number character varying(30) COLLATE pg_catalog."default",
    status boolean,
    comment text COLLATE pg_catalog."default",
    mode_of_application character varying(50) COLLATE pg_catalog."default",
    date_of_application date,
    cv_text_version text COLLATE pg_catalog."default",
    keywords character varying(255) COLLATE pg_catalog."default",
    added_person uuid,
    CONSTRAINT job_candidate_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.job_candidate_attachment
(
    id uuid NOT NULL,
    candidate_id uuid,
    file_name character varying(255) COLLATE pg_catalog."default",
    file_type character varying(255) COLLATE pg_catalog."default",
    file_size bigint,
    file_content bytea,
    attachment_type integer,
    CONSTRAINT job_candidate_attachment_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.job_candidate_history
(
    id uuid NOT NULL,
    candidate_id uuid,
    vacancy_id uuid,
    candidate_vacancy_name character varying(255) COLLATE pg_catalog."default",
    interview_id uuid,
    action integer,
    performed_by uuid,
    performed_date timestamp without time zone,
    note text COLLATE pg_catalog."default",
    interviewers character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT job_candidate_history_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.job_candidate_vacancy
(
    id uuid,
    candidate_id uuid NOT NULL,
    vacancy_id uuid NOT NULL,
    status character varying(100) COLLATE pg_catalog."default",
    applied_date date,
    CONSTRAINT job_candidate_vacancy_pkey PRIMARY KEY (candidate_id, vacancy_id)
);

CREATE TABLE IF NOT EXISTS public.job_category
(
    id uuid NOT NULL,
    name character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT job_category_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.job_interview
(
    id uuid NOT NULL,
    candidate_vacancy_id uuid,
    candidate_id uuid,
    interview_name character varying(100) COLLATE pg_catalog."default",
    interview_date timestamp without time zone,
    interview_time character varying(30) COLLATE pg_catalog."default",
    note text COLLATE pg_catalog."default",
    CONSTRAINT job_interview_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.job_interview_attachment
(
    id uuid NOT NULL,
    interview_id uuid,
    file_name character varying(255) COLLATE pg_catalog."default",
    file_type character varying(255) COLLATE pg_catalog."default",
    file_size uuid,
    file_content bytea,
    attachment_type character varying(100) COLLATE pg_catalog."default",
    comment character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT job_interview_attachment_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.job_interview_interviewer
(
    interview_id uuid NOT NULL,
    interviewer_id uuid NOT NULL,
    CONSTRAINT job_interview_interviewer_pkey PRIMARY KEY (interview_id, interviewer_id)
);

CREATE TABLE IF NOT EXISTS public.job_specification_attachment
(
    id uuid NOT NULL,
    job_title_id uuid,
    file_name character varying(255) COLLATE pg_catalog."default",
    file_type character varying(255) COLLATE pg_catalog."default",
    file_size uuid,
    file_content bytea,
    CONSTRAINT job_specification_attachment_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.job_title
(
    id uuid NOT NULL,
    job_title character varying(100) COLLATE pg_catalog."default",
    job_description text COLLATE pg_catalog."default",
    note text COLLATE pg_catalog."default",
    is_deleted boolean DEFAULT false,
    CONSTRAINT job_title_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.job_vacancy
(
    id uuid NOT NULL,
    job_title_code uuid,
    hiring_manager_id uuid,
    name character varying(100) COLLATE pg_catalog."default",
    description text COLLATE pg_catalog."default",
    no_of_positions uuid,
    status boolean,
    published_in_feed smallint,
    defined_time timestamp without time zone,
    updated_time timestamp without time zone,
    CONSTRAINT job_vacancy_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.job_vacancy_attachment
(
    id uuid NOT NULL,
    vacancy_id uuid,
    file_name character varying(255) COLLATE pg_catalog."default",
    file_type character varying(255) COLLATE pg_catalog."default",
    file_size uuid,
    file_content bytea,
    attachment_type integer,
    comment character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT job_vacancy_attachment_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.language
(
    id character varying(13) COLLATE pg_catalog."default" NOT NULL,
    name character varying(120) COLLATE pg_catalog."default",
    CONSTRAINT language_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.license
(
    id uuid NOT NULL,
    name character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT license_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.location
(
    id uuid NOT NULL,
    name character varying(110) COLLATE pg_catalog."default",
    country_code character varying(3) COLLATE pg_catalog."default",
    province character varying(60) COLLATE pg_catalog."default",
    city character varying(60) COLLATE pg_catalog."default",
    address character varying(255) COLLATE pg_catalog."default",
    zip_code character varying(35) COLLATE pg_catalog."default",
    phone character varying(35) COLLATE pg_catalog."default",
    fax character varying(35) COLLATE pg_catalog."default",
    notes character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT location_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.membership
(
    id uuid NOT NULL,
    name character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT membership_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.module
(
    id uuid NOT NULL,
    name character varying(120) COLLATE pg_catalog."default",
    status uuid,
    CONSTRAINT module_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.nationality
(
    id uuid NOT NULL,
    name character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT nationality_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.operational_country
(
    id uuid NOT NULL,
    country_code character varying(3) COLLATE pg_catalog."default",
    CONSTRAINT operational_country_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.organization_gen_info
(
    id uuid NOT NULL,
    name character varying(100) COLLATE pg_catalog."default",
    tax_id character varying(30) COLLATE pg_catalog."default",
    registration_number character varying(30) COLLATE pg_catalog."default",
    phone character varying(30) COLLATE pg_catalog."default",
    fax character varying(30) COLLATE pg_catalog."default",
    email character varying(30) COLLATE pg_catalog."default",
    country character varying(30) COLLATE pg_catalog."default",
    province character varying(30) COLLATE pg_catalog."default",
    city character varying(30) COLLATE pg_catalog."default",
    zip_code character varying(30) COLLATE pg_catalog."default",
    street1 character varying(100) COLLATE pg_catalog."default",
    street2 character varying(100) COLLATE pg_catalog."default",
    note character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT organization_gen_info_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.pay_grade
(
    sal_grd_code character varying(13) COLLATE pg_catalog."default" NOT NULL,
    sal_grd_name character varying(60) COLLATE pg_catalog."default",
    CONSTRAINT pay_grade_pkey PRIMARY KEY (sal_grd_code)
);

CREATE TABLE IF NOT EXISTS public.pay_grade_currency
(
    pay_grade_id uuid NOT NULL,
    currency_id character varying(6) COLLATE pg_catalog."default" NOT NULL,
    min_salary numeric(10, 2),
    max_salary numeric(10, 2),
    CONSTRAINT pay_grade_currency_pkey PRIMARY KEY (pay_grade_id, currency_id)
);

CREATE TABLE IF NOT EXISTS public.project
(
    project_id uuid NOT NULL,
    customer_id uuid,
    is_deleted boolean DEFAULT false,
    name character varying(100) COLLATE pg_catalog."default",
    description text COLLATE pg_catalog."default",
    CONSTRAINT project_pkey PRIMARY KEY (project_id)
);

CREATE TABLE IF NOT EXISTS public.project_activity
(
    activity_id uuid NOT NULL,
    project_id uuid NOT NULL,
    is_deleted boolean DEFAULT false,
    name character varying(110) COLLATE pg_catalog."default",
    CONSTRAINT project_activity_pkey PRIMARY KEY (activity_id)
);

CREATE TABLE IF NOT EXISTS public.project_admin
(
    project_id uuid NOT NULL,
    emp_number uuid NOT NULL,
    CONSTRAINT project_admin_pkey PRIMARY KEY (project_id, emp_number)
);

CREATE TABLE IF NOT EXISTS public.report
(
    report_id uuid NOT NULL,
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    report_group_id uuid NOT NULL,
    use_filter_field smallint NOT NULL,
    type character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT report_pkey PRIMARY KEY (report_id)
);

CREATE TABLE IF NOT EXISTS public.report_group
(
    report_group_id uuid NOT NULL,
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    core_sql text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT report_group_pkey PRIMARY KEY (report_group_id)
);

CREATE TABLE IF NOT EXISTS public.screen
(
    id uuid NOT NULL,
    name character varying(100) COLLATE pg_catalog."default",
    module_id uuid,
    action_url character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT screen_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.selected_composite_display_field
(
    id uuid NOT NULL,
    composite_display_field_id uuid NOT NULL,
    report_id uuid NOT NULL,
    CONSTRAINT selected_composite_display_field_pkey PRIMARY KEY (id, composite_display_field_id, report_id)
);

CREATE TABLE IF NOT EXISTS public.selected_display_field
(
    id uuid NOT NULL,
    display_field_id uuid NOT NULL,
    report_id uuid NOT NULL,
    CONSTRAINT selected_display_field_pkey PRIMARY KEY (id, display_field_id, report_id)
);

CREATE TABLE IF NOT EXISTS public.selected_display_field_group
(
    id uuid NOT NULL,
    report_id uuid NOT NULL,
    display_field_group_id uuid NOT NULL,
    CONSTRAINT selected_display_field_group_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.selected_filter_field
(
    report_id uuid NOT NULL,
    filter_field_id uuid NOT NULL,
    filter_field_order uuid NOT NULL,
    value1 character varying(255) COLLATE pg_catalog."default",
    value2 character varying(255) COLLATE pg_catalog."default",
    where_condition character varying(255) COLLATE pg_catalog."default",
    type character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT selected_filter_field_pkey PRIMARY KEY (report_id, filter_field_id)
);

CREATE TABLE IF NOT EXISTS public.selected_group_field
(
    group_field_id uuid NOT NULL,
    summary_display_field_id uuid NOT NULL,
    report_id uuid NOT NULL,
    CONSTRAINT selected_group_field_pkey PRIMARY KEY (group_field_id, summary_display_field_id, report_id)
);

CREATE TABLE IF NOT EXISTS public.skill
(
    id uuid NOT NULL,
    name character varying(120) COLLATE pg_catalog."default",
    description text COLLATE pg_catalog."default",
    CONSTRAINT skill_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.subunit
(
    id uuid NOT NULL,
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    unit_id character varying(100) COLLATE pg_catalog."default",
    description text COLLATE pg_catalog."default",
    lft integer,
    rgt integer,
    level smallint,
    CONSTRAINT subunit_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.summary_display_field
(
    summary_display_field_id uuid NOT NULL,
    function character varying(255) COLLATE pg_catalog."default" NOT NULL,
    label character varying(255) COLLATE pg_catalog."default" NOT NULL,
    field_alias character varying(255) COLLATE pg_catalog."default",
    is_sortable character varying(10) COLLATE pg_catalog."default" NOT NULL,
    sort_order character varying(255) COLLATE pg_catalog."default",
    sort_field character varying(255) COLLATE pg_catalog."default",
    element_type character varying(255) COLLATE pg_catalog."default" NOT NULL,
    element_property text COLLATE pg_catalog."default" NOT NULL,
    width character varying(255) COLLATE pg_catalog."default" NOT NULL,
    is_exportable boolean,
    text_alignment_style character varying(20) COLLATE pg_catalog."default",
    is_value_list boolean NOT NULL,
    display_field_group_id uuid,
    default_value character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT summary_display_field_pkey PRIMARY KEY (summary_display_field_id)
);

CREATE TABLE IF NOT EXISTS public.timesheet
(
    timesheet_id uuid NOT NULL,
    employee_id uuid NOT NULL,
    state character varying(255) COLLATE pg_catalog."default" NOT NULL,
    start_date date NOT NULL,
    end_date date NOT NULL,
    CONSTRAINT timesheet_pkey PRIMARY KEY (timesheet_id)
);

CREATE TABLE IF NOT EXISTS public.timesheet_action_log
(
    timesheet_action_log_id uuid NOT NULL,
    timesheet_id uuid,
    performed_by character varying(255) COLLATE pg_catalog."default",
    action character varying(255) COLLATE pg_catalog."default",
    comment character varying(255) COLLATE pg_catalog."default",
    date_time date,
    CONSTRAINT timesheet_action_log_pkey PRIMARY KEY (timesheet_action_log_id)
);

CREATE TABLE IF NOT EXISTS public.timesheet_item
(
    timesheet_item_id uuid NOT NULL,
    timesheet_id uuid NOT NULL,
    employee_id uuid,
    project_id uuid,
    activity_id uuid,
    date date,
    duration uuid,
    comment character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT timesheet_item_pkey PRIMARY KEY (timesheet_item_id)
);

CREATE TABLE IF NOT EXISTS public.user_role
(
    id uuid NOT NULL,
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    display_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    is_assignable smallint NOT NULL,
    is_predefined smallint NOT NULL,
    CONSTRAINT user_role_pkey PRIMARY KEY (id),
    CONSTRAINT user_role_name_key UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS public.user_role_data_group
(
    id uuid NOT NULL,
    user_role_id uuid,
    data_group_id uuid,
    can_read smallint,
    can_create smallint,
    can_update smallint,
    can_delete smallint,
    CONSTRAINT user_role_data_group_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.user_role_screen
(
    id uuid NOT NULL,
    user_role_id uuid,
    screen_id uuid,
    can_read smallint DEFAULT '0'::smallint,
    can_create boolean DEFAULT false,
    can_update boolean DEFAULT false,
    can_delete boolean DEFAULT false,
    CONSTRAINT user_role_screen_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.user_selection_rule
(
    id uuid NOT NULL,
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    description character varying(255) COLLATE pg_catalog."default" NOT NULL,
    implementation_class character varying(255) COLLATE pg_catalog."default" NOT NULL,
    rule_xml_data text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT user_selection_rule_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.user_user_role
(
    id uuid NOT NULL,
    user_id uuid,
    user_role_id uuid,
    rule_xml text COLLATE pg_catalog."default",
    CONSTRAINT user_user_role_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.users
(
    id uuid NOT NULL,
    user_role_id uuid,
    emp_number uuid,
    user_name character varying(40) COLLATE pg_catalog."default",
    user_password character varying(40) COLLATE pg_catalog."default",
    deleted boolean DEFAULT false,
    status boolean DEFAULT true,
    date_entered timestamp without time zone,
    date_modified timestamp without time zone,
    modified_user_id uuid,
    created_by uuid,
    CONSTRAINT users_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.work_shift
(
    id uuid NOT NULL,
    name text COLLATE pg_catalog."default" NOT NULL,
    hours_per_day numeric(4, 2) NOT NULL,
    CONSTRAINT work_shift_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.work_week
(
    id uuid NOT NULL,
    operational_country_id uuid,
    mon integer NOT NULL,
    tue integer NOT NULL,
    wed integer NOT NULL,
    thu integer NOT NULL,
    fri integer NOT NULL,
    sat integer NOT NULL,
    sun integer NOT NULL,
    CONSTRAINT work_week_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.workflow_state_machine
(
    id uuid NOT NULL,
    workflow character varying(255) COLLATE pg_catalog."default" NOT NULL,
    state character varying(255) COLLATE pg_catalog."default" NOT NULL,
    role character varying(255) COLLATE pg_catalog."default" NOT NULL,
    action character varying(255) COLLATE pg_catalog."default" NOT NULL,
    resulting_state character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT workflow_state_machine_pkey PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.abstract_display_field
    ADD CONSTRAINT fk_abstract_display_field_report_group_id FOREIGN KEY (report_group_id)
    REFERENCES public.report_group (report_group_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;